{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Yatiken/Projects/immigration-web-v1/src/app/api/data/%5Bid%5D/route.js"],"sourcesContent":["// src/app/api/data/[id]/route.js\r\n\r\nimport { NextResponse } from \"next/server\";\r\nimport fs from \"fs\";\r\nimport path from \"path\";\r\n\r\nexport const runtime = \"nodejs\";\r\n\r\nexport async function GET(request, { params }) {\r\n  try {\r\n    const { id } = params; // Next will pass the dynamic id here\r\n    const DATA_FILE = path.join(process.cwd(), \"data.json\");\r\n\r\n    let allData = [];\r\n    try {\r\n      const raw = await fs.promises.readFile(DATA_FILE, \"utf8\");\r\n      allData = JSON.parse(raw) || [];\r\n    } catch (err) {\r\n      return NextResponse.json({ error: \"Data store not found.\" }, { status: 500 });\r\n    }\r\n\r\n    const record = allData.find((entry) => entry.id === id);\r\n    if (!record) {\r\n      return NextResponse.json({ error: \"Not found\" }, { status: 404 });\r\n    }\r\n\r\n    // Return the full record (including `documents` sub‚Äêobject with URLs)\r\n    return NextResponse.json(record, { status: 200 });\r\n  } catch (err) {\r\n    console.error(\"GET /api/data/[id] ERROR:\", err);\r\n    return NextResponse.json({ error: \"Server error.\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAEjC;AACA;AACA;;;;AAEO,MAAM,UAAU;AAEhB,eAAe,IAAI,OAAO,EAAE,EAAE,MAAM,EAAE;IAC3C,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,QAAQ,qCAAqC;QAC5D,MAAM,YAAY,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;QAE3C,IAAI,UAAU,EAAE;QAChB,IAAI;YACF,MAAM,MAAM,MAAM,6FAAA,CAAA,UAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW;YAClD,UAAU,KAAK,KAAK,CAAC,QAAQ,EAAE;QACjC,EAAE,OAAO,KAAK;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,MAAM,SAAS,QAAQ,IAAI,CAAC,CAAC,QAAU,MAAM,EAAE,KAAK;QACpD,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAY,GAAG;gBAAE,QAAQ;YAAI;QACjE;QAEA,sEAAsE;QACtE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,QAAQ;YAAE,QAAQ;QAAI;IACjD,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAgB,GAAG;YAAE,QAAQ;QAAI;IACrE;AACF"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}